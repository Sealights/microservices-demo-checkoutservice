
name: Build, push image, trigger tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
          
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  GH_TOKEN: ${{ secrets.GH_PAT }}
  GH_USER_NAME: ${{ secrets.GH_USER_NAME }}
  GH_USER_EMAIL: ${{ secrets.GH_USER_EMAIL }}
  INITIATOR: "checkout"
  IMAGE: "159616352881.dkr.ecr.eu-west-1.amazonaws.com/microservices-demo-checkoutservice"
  
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_US_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_US_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GH_PAT }}
          
      - name: Build and push image to Amazon ECR
        if: github.event_name != 'pull_request'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: microservices-demo-checkoutservice
          IMAGE_TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .          
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
      - name: Trigger e2e tests      
        run: |             
             git config --global user.name ${GH_USER_NAME}
             git config --global user.email ${GH_USER_EMAIL}
            
             export GITHUB_TOKEN=${GH_TOKEN}
             export BRANCH_NAME=master@deployment_$RANDOM
             #export NOW=`date -u +"%Y-%m-%d %H:%M:%S,%3N"`
             export VERSION=${{ steps.tag_version.outputs.new_tag }}
             export IMAGE=${IMAGE}:$VERSION
             
             echo $IMAGE
             
             sudo snap install yq
               
             git clone https://${GH_TOKEN}@github.com/Sealights/microservices-demo-deployment.git integration
             git remote set-url origin https://${GH_TOKEN}@github.com/Sealights/microservices-demo-deployment.git
             cd integration
             cd k3s/$INITIATOR
             
             yq -i '(.spec.template.spec.containers[0].env.[]|select(.name=="VERSION").value)|=strenv(VERSION)' manifest-pod.yaml
             yq -i '(.spec.template.spec.containers[0].image)=strenv(IMAGE)' manifest-pod.yaml
             
             #cp ../deployment/manifest-pod.yaml .
             echo "Last touched at: $NOW" >> touch.txt
             git checkout -b $BRANCH_NAME
             git add .
             git commit -a -m "Deployment amended by $INITIATOR"
             git push --set-upstream origin $BRANCH_NAME             
             #git request-pull $BRANCH_NAME https://${GH_TOKEN}@github.com/Sealights/microservices-demo-deployment.git master
             echo ${GH_TOKEN} >> token.txt
             export GITHUB_TOKEN=
             export GH_TOKEN=
             gh auth login --with-token < token.txt
             gh pr create -B master --title="$INITIATOR service - ${{ steps.tag_version.outputs.new_tag }}" --body="Auto-created PR after $INITIATOR service (${{ steps.tag_version.outputs.new_tag }}) source changed"          
